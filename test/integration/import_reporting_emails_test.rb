require 'test_helper'

class ImportReportingEmailsTest < ActionDispatch::IntegrationTest
  include ActionMailer::TestHelper

  # Section#import
  test "import reporting email generated" do
    assert_emails 1 do
      Section.import(file_fixture('test_crse.csv'))
    end
  end

  test "import reporting email content" do
    Section.import(file_fixture('test_crse.csv'))
    email = ActionMailer::Base.deliveries.last
    assert_equal [ENV['ENROLLCHAT_ADMIN_EMAIL']], email.from
    assert_equal [ENV['ENROLLCHAT_ADMIN_EMAIL']], email.to
    assert_equal 'Import Processed (Triggered in test)', email.subject
    assert email.body.to_s.include?("<h1>Canceled sections</h1>")
    assert email.body.to_s.include?("<p>Experiential Learning-001 in 1</p>")
    assert email.body.to_s.include?("<h1>Updated sections</h1>")
    assert email.body.to_s.include?("<p><a href='/sections' class='dropdown-item'>3 sections were updated during the import process. 1 sections were created.</a></p>")
    assert email.body.to_s.include?("<p><a href='/sections' class='dropdown-item'>All sections were touched by the import process.</a></p>")
  end

  # import rake task
  test "'Import Executed' email is generated by import rake task" do
    Rake::Task.clear
    Enrollchat::Application.load_tasks
    assert_emails 1 do
      Rake::Task['import:retrieve_files'].invoke
    end
  end

  test "'Import Executed' email has at least the standard portion of its content." do
    Rake::Task.clear
    Enrollchat::Application.load_tasks
    Rake::Task['import:retrieve_files'].invoke
    email = ActionMailer::Base.deliveries.last
    assert_equal [ENV['ENROLLCHAT_ADMIN_EMAIL']], email.from
    assert_equal [ENV['ENROLLCHAT_ADMIN_EMAIL']], email.to
    assert_equal 'Import Executed (Triggered in test)', email.subject
    assert email.body.to_s.include?("<h1>Overall</h1><p>Download running.</p>")
    Rake::Task.clear
  end
end
